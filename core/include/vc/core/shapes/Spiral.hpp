#pragma once

#include "vc/core/shapes/ShapePrimitive.hpp"

namespace volcart
{
namespace shapes
{
/**
 * @author Seth Parker
 * @date 12/14/17
 *
 * @brief Spiral (i.e. scroll-like) surface shape
 *
 * This class generates a scroll-like surface shape using a
 * [logarithmic spiral](https://en.wikipedia.org/wiki/Logarithmic_spiral)
 * as the basis for the shape.
 *
 * The spiral is parameterized by the arc length of the spiral and the number of
 * samples along the curve. The number of desired samples can be provided
 * directly, or can be determined by providing the angular offset between each
 * point on the curve. The parameters `a` and `b` are scaling coefficients on
 * the equations for the coordinates of the sampled points. They can be thought
 * of as controlling the "tightness" of the spiral:
 *
 * \f{eqnarray*}{
        x(\theta) &=& ae^{b\theta}\cos (\theta) \\
        y(\theta) &=& ae^{b\theta}\sin (\theta)
 * \f}
 *
 * The points generated by this class are ordered.
 *
 * @ingroup Shapes
 */
class Spiral : public ShapePrimitive
{
public:
    /**
     * @brief Constructor parameterized for angular offset and distance
     * between spirals
     */
    Spiral(
        double arcLength,
        double height,
        double a = 0.5,
        double b = 0.1,
        double dTheta = 0.25,
        double dH = 1.0);

    /**
     * @brief Constructor parameterized for number of points along the spiral
     * and the number of spirals
     */
    Spiral(
        double arcLength,
        double height,
        int numPts,
        int numCurves,
        double a = 0.5,
        double b = 0.1);

private:
    /** Generic spiral construction */
    void construct_spiral_(
        int numCols, int numRows, double a, double b, double dTheta, double dH);
};
}
}